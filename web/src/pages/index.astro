---
import Layout from '../layouts/Layout.astro';
import theme from '../../../src/theme.js'
import CopyIcon from '../components/icons/copyIcon.astro'
import pkg from '../../../package.json'

const { animation } = theme
const { version } = pkg
---

<Layout title="Welcome to Astro.">
	<wc-toast></wc-toast>
	<main>
		<header class="max-w-4xl mx-auto flex items-center justify-center flex-col">
			<h1 class="font-semibold text-4xl pt-10 pb-5">Tailwind CSS Animations</h1>
			<h2 class="font-medium opacity-80">Plugin for Tailwind CSS</h2>
			<div id="command-install"class="mt-10 mb-5 py-3 px-4 border-[1px] rounded-[4px] cursor-pointer">
				<code class="flex items-center gap-4">npm i @jose-sissa-3s/tailwind-animations <CopyIcon styles="inline-block" /></code>
			</div>
			<section class='mb-6 flex flex-col items-center'>
				<p class='text-xl font-medium mb-2'>Animate all</p>
				<label class='relative inline-flex cursor-pointer items-center'>
					<input type='checkbox' value='' class='peer sr-only' id='animate' />
					<div class="rtl:peer-checked:after:-translate-x- peer h-8 w-16 rounded-full bg-gray-200 after:absolute after:start-[2px] after:top-[2px] after:h-7 after:w-7 after:rounded-full after:border after:border-gray-300 after:bg-white after:transition-all after:content-[''] peer-checked:bg-zinc-600 peer-checked:after:translate-x-[31px] peer-checked:after:border-white peer-focus:outline-none dark:bg-zinc-300">
					</div>					
				</label>
			</section>
		</header>

		<section class="max-w-4xl mx-auto grid grid-cols-3 gap-4">
			{
				Object.keys(animation).map(animationKey => {
					return (
						<article class="relative col-span-1 border rounded border-gray-200 hover:border-gray-400 hover:shadow transition cursor-pointer" data-class={animationKey}>
							<CopyIcon styles="absolute top-2 right-2" />
							<div class="p-4 flex gap-4 items-center justify-center flex-col w-full h-full">
								<span class="w-16 h-16 bg-gray-200 rounded-md flex items-center justify-center">
								</span>
								<h3 class="font-semibold text-sm opacity-80">{animationKey}</h3>
							</div>
						</article>
					)
				})
			}
		</section>
	</main>
</Layout>

<script>
	import { toast } from 'wc-toast'

	const articles = document.querySelectorAll('article')
	const commandInstall = document.getElementById('command-install')
	const animateAll = document.getElementById('animate')

	articles.forEach((article) => {
		const animationKey = article.getAttribute('data-class')
		const animationClass = `animate-${animationKey}`
		const box = article.querySelector('span')

		article.addEventListener('mouseenter', () => {
			box.classList.add(animationClass)
		})
		article.addEventListener('mouseleave', () => {
			box.classList.remove(animationClass)
		})
		
		article.addEventListener('click', () => {
			const animationValue = `animate-${article.getAttribute('data-class')}`
			navigator.clipboard.writeText(animationValue)

			toast("Copied to clipboard!", 
			{
				theme: {
					type: "dark",
				},
				icon: {
					type: 'success'
				}
			})
		})

		animateAll.addEventListener('change', () => {
			if (animateAll.checked) {
				box.classList.add(animationClass)
				box.style.animationIterationCount = 'infinite'
			} else {
				box.classList.remove(animationClass)
				box.style.animationIterationCount = 'unset'
			}
		})
	})

	commandInstall.addEventListener('click', () => {
		navigator.clipboard.writeText('npm i @jose-sissa-3s/tailwind-animations')
		toast("Copied to clipboard!", 
			{
				theme: {
					type: "dark",
				},
				icon: {
					type: 'success'
				}
			}
		)
	})
</script>
